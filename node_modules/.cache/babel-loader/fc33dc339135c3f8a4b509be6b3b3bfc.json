{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utils_1 = require(\"./Utils\");\n\nvar SpatialGrid = function () {\n  function SpatialGrid(canvas) {\n    this.grid = [];\n    this.cellSize = 20;\n    this.widthSegment = Math.round(canvas.width / this.cellSize);\n    this.heightSegment = Math.round(canvas.height / this.cellSize);\n  }\n\n  SpatialGrid.prototype.setGrid = function (particles, dimension) {\n    var grid = [];\n    var widthSegment = (dimension === null || dimension === void 0 ? void 0 : dimension.width) ? (dimension === null || dimension === void 0 ? void 0 : dimension.width) / this.cellSize : this.widthSegment;\n    var heightSegment = (dimension === null || dimension === void 0 ? void 0 : dimension.height) ? (dimension === null || dimension === void 0 ? void 0 : dimension.height) / this.cellSize : this.heightSegment;\n\n    for (var _i = 0, particles_1 = particles; _i < particles_1.length; _i++) {\n      var particle = particles_1[_i];\n      var pos = this.index(particle.position);\n      if (!Array.isArray(grid[pos.x])) grid[pos.x] = [];\n      if (!Array.isArray(grid[pos.x][pos.y])) grid[pos.x][pos.y] = [];\n      grid[pos.x][pos.y].push(particle);\n    }\n\n    this.widthSegment = widthSegment;\n    this.heightSegment = heightSegment;\n    this.grid = grid;\n  };\n\n  SpatialGrid.prototype.queryInCell = function (position) {\n    var pos = this.index(position);\n    return Array.isArray(this.grid[pos.x]) && Array.isArray(this.grid[pos.x][pos.y]) ? this.grid[pos.x][pos.y] || [] : [];\n  };\n\n  SpatialGrid.prototype.queryRadius = function (position, radius) {\n    var pos = this.index(position);\n    var rad = this.radius({\n      x: radius,\n      y: radius\n    });\n    var items = this.select(this.indexOp(pos, '-', rad), this.indexOp(pos, '+', rad));\n    var out = [];\n\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var item = items_1[_i];\n\n      if (Utils_1.Utils.getDistanceBetweenCoordinates(item.position, position) <= radius) {\n        out.push(item);\n      }\n    }\n\n    return out;\n  };\n\n  SpatialGrid.prototype.queryRadiusWithDistance = function (position, radius) {\n    var pos = this.index(position);\n    var rad = this.radius({\n      x: radius,\n      y: radius\n    });\n    var items = this.select(this.indexOp(pos, '-', rad), this.indexOp(pos, '+', rad));\n    var out = [];\n\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n      var item = items_2[_i];\n      var distance = Utils_1.Utils.getDistanceBetweenCoordinates(item.position, position);\n\n      if (distance <= radius) {\n        out.push({\n          distance: distance,\n          particle: item\n        });\n      }\n    }\n\n    return out;\n  };\n\n  SpatialGrid.prototype.select = function (start, end) {\n    var out = [];\n\n    for (var x = start.x; x <= end.x; x++) {\n      if (!Array.isArray(this.grid[x])) {\n        continue;\n      }\n\n      for (var y = start.y; y <= end.y; y++) {\n        if (!Array.isArray(this.grid[x][y])) {\n          continue;\n        }\n\n        for (var _i = 0, _a = this.grid[x][y]; _i < _a.length; _i++) {\n          var item = _a[_i];\n          out.push(item);\n        }\n      }\n    }\n\n    return out;\n  };\n\n  SpatialGrid.prototype.index = function (position) {\n    return {\n      x: Math.round(position.x / this.widthSegment),\n      y: Math.round(position.y / this.heightSegment)\n    };\n  };\n\n  SpatialGrid.prototype.radius = function (radius) {\n    return {\n      x: Math.ceil(radius.x / this.widthSegment),\n      y: Math.ceil(radius.y / this.heightSegment)\n    };\n  };\n\n  SpatialGrid.prototype.indexOp = function (left, op, right) {\n    if (op == '+') {\n      return {\n        x: this.clamp(left.x + right.x),\n        y: this.clamp(left.y + right.y)\n      };\n    } else {\n      return {\n        x: this.clamp(left.x - right.x),\n        y: this.clamp(left.y - right.y)\n      };\n    }\n  };\n\n  SpatialGrid.prototype.clamp = function (num) {\n    return Utils_1.Utils.clamp(num, 0, this.cellSize);\n  };\n\n  return SpatialGrid;\n}();\n\nexports.SpatialGrid = SpatialGrid;","map":{"version":3,"sources":["/home/jhon/Documents/WebFullStack/itresse-landing/node_modules/tsparticles/dist/Classes/Utils/SpatialGrid.js"],"names":["Object","defineProperty","exports","value","Utils_1","require","SpatialGrid","canvas","grid","cellSize","widthSegment","Math","round","width","heightSegment","height","prototype","setGrid","particles","dimension","_i","particles_1","length","particle","pos","index","position","Array","isArray","x","y","push","queryInCell","queryRadius","radius","rad","items","select","indexOp","out","items_1","item","Utils","getDistanceBetweenCoordinates","queryRadiusWithDistance","items_2","distance","start","end","_a","ceil","left","op","right","clamp","num"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils_1 = require(\"./Utils\");\nvar SpatialGrid = (function () {\n    function SpatialGrid(canvas) {\n        this.grid = [];\n        this.cellSize = 20;\n        this.widthSegment = Math.round(canvas.width / this.cellSize);\n        this.heightSegment = Math.round(canvas.height / this.cellSize);\n    }\n    SpatialGrid.prototype.setGrid = function (particles, dimension) {\n        var grid = [];\n        var widthSegment = (dimension === null || dimension === void 0 ? void 0 : dimension.width) ? (dimension === null || dimension === void 0 ? void 0 : dimension.width) / this.cellSize : this.widthSegment;\n        var heightSegment = (dimension === null || dimension === void 0 ? void 0 : dimension.height) ? (dimension === null || dimension === void 0 ? void 0 : dimension.height) / this.cellSize : this.heightSegment;\n        for (var _i = 0, particles_1 = particles; _i < particles_1.length; _i++) {\n            var particle = particles_1[_i];\n            var pos = this.index(particle.position);\n            if (!Array.isArray(grid[pos.x]))\n                grid[pos.x] = [];\n            if (!Array.isArray(grid[pos.x][pos.y]))\n                grid[pos.x][pos.y] = [];\n            grid[pos.x][pos.y].push(particle);\n        }\n        this.widthSegment = widthSegment;\n        this.heightSegment = heightSegment;\n        this.grid = grid;\n    };\n    SpatialGrid.prototype.queryInCell = function (position) {\n        var pos = this.index(position);\n        return Array.isArray(this.grid[pos.x]) && Array.isArray(this.grid[pos.x][pos.y]) ?\n            this.grid[pos.x][pos.y] || [] : [];\n    };\n    SpatialGrid.prototype.queryRadius = function (position, radius) {\n        var pos = this.index(position);\n        var rad = this.radius({ x: radius, y: radius });\n        var items = this.select(this.indexOp(pos, '-', rad), this.indexOp(pos, '+', rad));\n        var out = [];\n        for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n            var item = items_1[_i];\n            if (Utils_1.Utils.getDistanceBetweenCoordinates(item.position, position) <= radius) {\n                out.push(item);\n            }\n        }\n        return out;\n    };\n    SpatialGrid.prototype.queryRadiusWithDistance = function (position, radius) {\n        var pos = this.index(position);\n        var rad = this.radius({ x: radius, y: radius });\n        var items = this.select(this.indexOp(pos, '-', rad), this.indexOp(pos, '+', rad));\n        var out = [];\n        for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n            var item = items_2[_i];\n            var distance = Utils_1.Utils.getDistanceBetweenCoordinates(item.position, position);\n            if (distance <= radius) {\n                out.push({\n                    distance: distance,\n                    particle: item,\n                });\n            }\n        }\n        return out;\n    };\n    SpatialGrid.prototype.select = function (start, end) {\n        var out = [];\n        for (var x = start.x; x <= end.x; x++) {\n            if (!Array.isArray(this.grid[x])) {\n                continue;\n            }\n            for (var y = start.y; y <= end.y; y++) {\n                if (!Array.isArray(this.grid[x][y])) {\n                    continue;\n                }\n                for (var _i = 0, _a = this.grid[x][y]; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    out.push(item);\n                }\n            }\n        }\n        return out;\n    };\n    SpatialGrid.prototype.index = function (position) {\n        return {\n            x: Math.round(position.x / this.widthSegment),\n            y: Math.round(position.y / this.heightSegment),\n        };\n    };\n    SpatialGrid.prototype.radius = function (radius) {\n        return {\n            x: Math.ceil(radius.x / this.widthSegment),\n            y: Math.ceil(radius.y / this.heightSegment),\n        };\n    };\n    SpatialGrid.prototype.indexOp = function (left, op, right) {\n        if (op == '+') {\n            return {\n                x: this.clamp(left.x + right.x),\n                y: this.clamp(left.y + right.y),\n            };\n        }\n        else {\n            return {\n                x: this.clamp(left.x - right.x),\n                y: this.clamp(left.y - right.y),\n            };\n        }\n    };\n    SpatialGrid.prototype.clamp = function (num) {\n        return Utils_1.Utils.clamp(num, 0, this.cellSize);\n    };\n    return SpatialGrid;\n}());\nexports.SpatialGrid = SpatialGrid;\n"]},"metadata":{},"sourceType":"script"}