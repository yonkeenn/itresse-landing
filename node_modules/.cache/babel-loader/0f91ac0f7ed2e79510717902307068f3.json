{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ProcessBubbleType_1 = require(\"../../../Enums/ProcessBubbleType\");\n\nvar Utils_1 = require(\"../../Utils/Utils\");\n\nvar HoverMode_1 = require(\"../../../Enums/Modes/HoverMode\");\n\nvar ClickMode_1 = require(\"../../../Enums/Modes/ClickMode\");\n\nvar Constants_1 = require(\"../../Utils/Constants\");\n\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\n\nvar Bubbler = function () {\n  function Bubbler() {}\n\n  Bubbler.reset = function (particle) {\n    delete particle.bubble.opacity;\n    delete particle.bubble.radius;\n    delete particle.bubble.color;\n  };\n\n  Bubbler.bubble = function (container) {\n    var options = container.options;\n    var hoverEnabled = options.interactivity.events.onHover.enable;\n    var hoverMode = options.interactivity.events.onHover.mode;\n    var clickEnabled = options.interactivity.events.onClick.enable;\n    var clickMode = options.interactivity.events.onClick.mode;\n\n    if (hoverEnabled && Utils_1.Utils.isInArray(HoverMode_1.HoverMode.bubble, hoverMode)) {\n      this.hoverBubble(container);\n    } else if (clickEnabled && Utils_1.Utils.isInArray(ClickMode_1.ClickMode.bubble, clickMode)) {\n      this.clickBubble(container);\n    }\n  };\n\n  Bubbler.process = function (container, particle, distMouse, timeSpent, data) {\n    var bubbleParam = data.bubbleObj.optValue;\n\n    if (bubbleParam === undefined) {\n      return;\n    }\n\n    var options = container.options;\n    var bubbleDuration = options.interactivity.modes.bubble.duration;\n    var bubbleDistance = container.retina.bubbleModeDistance;\n    var particlesParam = data.particlesObj.optValue;\n    var pObjBubble = data.bubbleObj.value;\n    var pObj = data.particlesObj.value || 0;\n    var type = data.type;\n\n    if (bubbleParam !== particlesParam) {\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n            if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n              particle.bubble.radius = value;\n            }\n\n            if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n            delete particle.bubble.radius;\n          }\n\n          if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n          delete particle.bubble.radius;\n        }\n\n        if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  };\n\n  Bubbler.clickBubble = function (container) {\n    var _a;\n\n    var options = container.options;\n    var mouseClickPos = container.interactivity.mouse.clickPosition;\n\n    if (mouseClickPos === undefined) {\n      return;\n    }\n\n    var distance = container.retina.bubbleModeDistance;\n    var query = container.particles.spatialGrid.queryRadius(mouseClickPos, distance);\n\n    for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n      var particle = query_1[_i];\n      var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mouseClickPos);\n      var timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n      if (container.bubble.clicking) {\n        if (timeSpent > options.interactivity.modes.bubble.duration) {\n          container.bubble.durationEnd = true;\n        }\n\n        if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n          container.bubble.clicking = false;\n          container.bubble.durationEnd = false;\n        }\n\n        var sizeData = {\n          bubbleObj: {\n            optValue: container.retina.bubbleModeSize,\n            value: particle.bubble.radius\n          },\n          particlesObj: {\n            optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n            value: particle.size.value\n          },\n          type: ProcessBubbleType_1.ProcessBubbleType.size\n        };\n        this.process(container, particle, distMouse, timeSpent, sizeData);\n        var opacityData = {\n          bubbleObj: {\n            optValue: options.interactivity.modes.bubble.opacity,\n            value: particle.bubble.opacity\n          },\n          particlesObj: {\n            optValue: particle.particlesOptions.opacity.value,\n            value: particle.opacity.value\n          },\n          type: ProcessBubbleType_1.ProcessBubbleType.opacity\n        };\n        this.process(container, particle, distMouse, timeSpent, opacityData);\n\n        if (!container.bubble.durationEnd) {\n          if (distMouse <= container.retina.bubbleModeDistance) {\n            this.hoverBubbleColor(container, particle);\n          } else {\n            delete particle.bubble.color;\n          }\n        } else {\n          delete particle.bubble.color;\n        }\n      }\n    }\n  };\n\n  Bubbler.hoverBubble = function (container) {\n    var mousePos = container.interactivity.mouse.position;\n\n    if (mousePos === undefined) {\n      return;\n    }\n\n    var distance = container.retina.bubbleModeDistance;\n    var query = container.particles.spatialGrid.queryRadiusWithDistance(mousePos, distance);\n\n    for (var _i = 0, query_2 = query; _i < query_2.length; _i++) {\n      var _a = query_2[_i],\n          distance_1 = _a.distance,\n          particle = _a.particle;\n\n      if ((particle === null || particle === void 0 ? void 0 : particle.position) === undefined) {\n        continue;\n      }\n\n      var ratio = 1 - distance_1 / container.retina.bubbleModeDistance;\n\n      if (distance_1 <= container.retina.bubbleModeDistance) {\n        if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n          this.hoverBubbleSize(container, particle, ratio);\n          this.hoverBubbleOpacity(container, particle, ratio);\n          this.hoverBubbleColor(container, particle);\n        }\n      } else {\n        this.reset(particle);\n      }\n\n      if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n        this.reset(particle);\n      }\n    }\n  };\n\n  Bubbler.hoverBubbleSize = function (container, particle, ratio) {\n    var _a;\n\n    var modeSize = container.retina.bubbleModeSize;\n\n    if (modeSize === undefined) {\n      return;\n    }\n\n    var optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n    var pSize = particle.size.value;\n    var size = this.calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n    if (size !== undefined) {\n      particle.bubble.radius = size;\n    }\n  };\n\n  Bubbler.hoverBubbleOpacity = function (container, particle, ratio) {\n    var options = container.options;\n    var modeOpacity = options.interactivity.modes.bubble.opacity;\n\n    if (modeOpacity === undefined) {\n      return;\n    }\n\n    var optOpacity = particle.particlesOptions.opacity.value;\n    var pOpacity = particle.opacity.value;\n    var opacity = this.calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n\n    if (opacity !== undefined) {\n      particle.bubble.opacity = opacity;\n    }\n  };\n\n  Bubbler.calculateBubbleValue = function (particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue > optionsValue) {\n      var size = particleValue + (modeValue - optionsValue) * ratio;\n      return Utils_1.Utils.clamp(size, particleValue, modeValue);\n    } else if (modeValue < optionsValue) {\n      var size = particleValue - (optionsValue - modeValue) * ratio;\n      return Utils_1.Utils.clamp(size, modeValue, particleValue);\n    }\n  };\n\n  Bubbler.hoverBubbleColor = function (container, particle) {\n    var options = container.options;\n\n    if (particle.bubble.color === undefined) {\n      var modeColor = options.interactivity.modes.bubble.color;\n\n      if (modeColor === undefined) {\n        return;\n      }\n\n      particle.bubble.color = ColorUtils_1.ColorUtils.colorToRgb(modeColor instanceof Array ? Utils_1.Utils.itemFromArray(modeColor) : modeColor);\n    }\n  };\n\n  return Bubbler;\n}();\n\nexports.Bubbler = Bubbler;","map":{"version":3,"sources":["/home/jhon/Web/iTresse/landing/node_modules/tsparticles/dist/Classes/Interactions/Mouse/Bubbler.js"],"names":["Object","defineProperty","exports","value","ProcessBubbleType_1","require","Utils_1","HoverMode_1","ClickMode_1","Constants_1","ColorUtils_1","Bubbler","reset","particle","bubble","opacity","radius","color","container","options","hoverEnabled","interactivity","events","onHover","enable","hoverMode","mode","clickEnabled","onClick","clickMode","Utils","isInArray","HoverMode","hoverBubble","ClickMode","clickBubble","process","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","modes","duration","bubbleDistance","retina","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","type","durationEnd","obj","ProcessBubbleType","size","_a","mouseClickPos","mouse","clickPosition","distance","query","particles","spatialGrid","queryRadius","_i","query_1","length","getDistanceBetweenCoordinates","position","Date","getTime","clickTime","clicking","sizeData","bubbleModeSize","sizeValue","opacityData","particlesOptions","hoverBubbleColor","mousePos","queryRadiusWithDistance","query_2","distance_1","ratio","status","Constants","mouseMoveEvent","hoverBubbleSize","hoverBubbleOpacity","mouseLeaveEvent","modeSize","optSize","pSize","calculateBubbleValue","modeOpacity","optOpacity","pOpacity","particleValue","modeValue","optionsValue","clamp","modeColor","ColorUtils","colorToRgb","Array","itemFromArray"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,mBAAmB,GAAGC,OAAO,CAAC,kCAAD,CAAjC;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,gCAAD,CAAzB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,gCAAD,CAAzB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIK,YAAY,GAAGL,OAAO,CAAC,wBAAD,CAA1B;;AACA,IAAIM,OAAO,GAAI,YAAY;AACvB,WAASA,OAAT,GAAmB,CAClB;;AACDA,EAAAA,OAAO,CAACC,KAAR,GAAgB,UAAUC,QAAV,EAAoB;AAChC,WAAOA,QAAQ,CAACC,MAAT,CAAgBC,OAAvB;AACA,WAAOF,QAAQ,CAACC,MAAT,CAAgBE,MAAvB;AACA,WAAOH,QAAQ,CAACC,MAAT,CAAgBG,KAAvB;AACH,GAJD;;AAKAN,EAAAA,OAAO,CAACG,MAAR,GAAiB,UAAUI,SAAV,EAAqB;AAClC,QAAIC,OAAO,GAAGD,SAAS,CAACC,OAAxB;AACA,QAAIC,YAAY,GAAGD,OAAO,CAACE,aAAR,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqCC,MAAxD;AACA,QAAIC,SAAS,GAAGN,OAAO,CAACE,aAAR,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqCG,IAArD;AACA,QAAIC,YAAY,GAAGR,OAAO,CAACE,aAAR,CAAsBC,MAAtB,CAA6BM,OAA7B,CAAqCJ,MAAxD;AACA,QAAIK,SAAS,GAAGV,OAAO,CAACE,aAAR,CAAsBC,MAAtB,CAA6BM,OAA7B,CAAqCF,IAArD;;AACA,QAAIN,YAAY,IAAId,OAAO,CAACwB,KAAR,CAAcC,SAAd,CAAwBxB,WAAW,CAACyB,SAAZ,CAAsBlB,MAA9C,EAAsDW,SAAtD,CAApB,EAAsF;AAClF,WAAKQ,WAAL,CAAiBf,SAAjB;AACH,KAFD,MAGK,IAAIS,YAAY,IAAIrB,OAAO,CAACwB,KAAR,CAAcC,SAAd,CAAwBvB,WAAW,CAAC0B,SAAZ,CAAsBpB,MAA9C,EAAsDe,SAAtD,CAApB,EAAsF;AACvF,WAAKM,WAAL,CAAiBjB,SAAjB;AACH;AACJ,GAZD;;AAaAP,EAAAA,OAAO,CAACyB,OAAR,GAAkB,UAAUlB,SAAV,EAAqBL,QAArB,EAA+BwB,SAA/B,EAA0CC,SAA1C,EAAqDC,IAArD,EAA2D;AACzE,QAAIC,WAAW,GAAGD,IAAI,CAACE,SAAL,CAAeC,QAAjC;;AACA,QAAIF,WAAW,KAAKG,SAApB,EAA+B;AAC3B;AACH;;AACD,QAAIxB,OAAO,GAAGD,SAAS,CAACC,OAAxB;AACA,QAAIyB,cAAc,GAAGzB,OAAO,CAACE,aAAR,CAAsBwB,KAAtB,CAA4B/B,MAA5B,CAAmCgC,QAAxD;AACA,QAAIC,cAAc,GAAG7B,SAAS,CAAC8B,MAAV,CAAiBC,kBAAtC;AACA,QAAIC,cAAc,GAAGX,IAAI,CAACY,YAAL,CAAkBT,QAAvC;AACA,QAAIU,UAAU,GAAGb,IAAI,CAACE,SAAL,CAAetC,KAAhC;AACA,QAAIkD,IAAI,GAAGd,IAAI,CAACY,YAAL,CAAkBhD,KAAlB,IAA2B,CAAtC;AACA,QAAImD,IAAI,GAAGf,IAAI,CAACe,IAAhB;;AACA,QAAId,WAAW,KAAKU,cAApB,EAAoC;AAChC,UAAI,CAAChC,SAAS,CAACJ,MAAV,CAAiByC,WAAtB,EAAmC;AAC/B,YAAIlB,SAAS,IAAIU,cAAjB,EAAiC;AAC7B,cAAIS,GAAG,GAAGJ,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4DC,IAAtE;;AACA,cAAIG,GAAG,KAAKhB,WAAZ,EAAyB;AACrB,gBAAIrC,KAAK,GAAGkD,IAAI,GAAIf,SAAS,IAAIe,IAAI,GAAGb,WAAX,CAAT,GAAmCI,cAAvD;;AACA,gBAAIU,IAAI,KAAKlD,mBAAmB,CAACqD,iBAApB,CAAsCC,IAAnD,EAAyD;AACrD7C,cAAAA,QAAQ,CAACC,MAAT,CAAgBE,MAAhB,GAAyBb,KAAzB;AACH;;AACD,gBAAImD,IAAI,KAAKlD,mBAAmB,CAACqD,iBAApB,CAAsC1C,OAAnD,EAA4D;AACxDF,cAAAA,QAAQ,CAACC,MAAT,CAAgBC,OAAhB,GAA0BZ,KAA1B;AACH;AACJ;AACJ,SAXD,MAYK;AACD,cAAImD,IAAI,KAAKlD,mBAAmB,CAACqD,iBAApB,CAAsCC,IAAnD,EAAyD;AACrD,mBAAO7C,QAAQ,CAACC,MAAT,CAAgBE,MAAvB;AACH;;AACD,cAAIsC,IAAI,KAAKlD,mBAAmB,CAACqD,iBAApB,CAAsC1C,OAAnD,EAA4D;AACxD,mBAAOF,QAAQ,CAACC,MAAT,CAAgBC,OAAvB;AACH;AACJ;AACJ,OArBD,MAsBK,IAAIqC,UAAJ,EAAgB;AACjB,YAAIE,IAAI,KAAKlD,mBAAmB,CAACqD,iBAApB,CAAsCC,IAAnD,EAAyD;AACrD,iBAAO7C,QAAQ,CAACC,MAAT,CAAgBE,MAAvB;AACH;;AACD,YAAIsC,IAAI,KAAKlD,mBAAmB,CAACqD,iBAApB,CAAsC1C,OAAnD,EAA4D;AACxD,iBAAOF,QAAQ,CAACC,MAAT,CAAgBC,OAAvB;AACH;AACJ;AACJ;AACJ,GA5CD;;AA6CAJ,EAAAA,OAAO,CAACwB,WAAR,GAAsB,UAAUjB,SAAV,EAAqB;AACvC,QAAIyC,EAAJ;;AACA,QAAIxC,OAAO,GAAGD,SAAS,CAACC,OAAxB;AACA,QAAIyC,aAAa,GAAG1C,SAAS,CAACG,aAAV,CAAwBwC,KAAxB,CAA8BC,aAAlD;;AACA,QAAIF,aAAa,KAAKjB,SAAtB,EAAiC;AAC7B;AACH;;AACD,QAAIoB,QAAQ,GAAG7C,SAAS,CAAC8B,MAAV,CAAiBC,kBAAhC;AACA,QAAIe,KAAK,GAAG9C,SAAS,CAAC+C,SAAV,CAAoBC,WAApB,CAAgCC,WAAhC,CAA4CP,aAA5C,EAA2DG,QAA3D,CAAZ;;AACA,SAAK,IAAIK,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGL,KAA3B,EAAkCI,EAAE,GAAGC,OAAO,CAACC,MAA/C,EAAuDF,EAAE,EAAzD,EAA6D;AACzD,UAAIvD,QAAQ,GAAGwD,OAAO,CAACD,EAAD,CAAtB;AACA,UAAI/B,SAAS,GAAG/B,OAAO,CAACwB,KAAR,CAAcyC,6BAAd,CAA4C1D,QAAQ,CAAC2D,QAArD,EAA+DZ,aAA/D,CAAhB;AACA,UAAItB,SAAS,GAAG,CAAC,IAAImC,IAAJ,GAAWC,OAAX,MAAwBxD,SAAS,CAACG,aAAV,CAAwBwC,KAAxB,CAA8Bc,SAA9B,IAA2C,CAAnE,CAAD,IAA0E,IAA1F;;AACA,UAAIzD,SAAS,CAACJ,MAAV,CAAiB8D,QAArB,EAA+B;AAC3B,YAAItC,SAAS,GAAGnB,OAAO,CAACE,aAAR,CAAsBwB,KAAtB,CAA4B/B,MAA5B,CAAmCgC,QAAnD,EAA6D;AACzD5B,UAAAA,SAAS,CAACJ,MAAV,CAAiByC,WAAjB,GAA+B,IAA/B;AACH;;AACD,YAAIjB,SAAS,GAAGnB,OAAO,CAACE,aAAR,CAAsBwB,KAAtB,CAA4B/B,MAA5B,CAAmCgC,QAAnC,GAA8C,CAA9D,EAAiE;AAC7D5B,UAAAA,SAAS,CAACJ,MAAV,CAAiB8D,QAAjB,GAA4B,KAA5B;AACA1D,UAAAA,SAAS,CAACJ,MAAV,CAAiByC,WAAjB,GAA+B,KAA/B;AACH;;AACD,YAAIsB,QAAQ,GAAG;AACXpC,UAAAA,SAAS,EAAE;AACPC,YAAAA,QAAQ,EAAExB,SAAS,CAAC8B,MAAV,CAAiB8B,cADpB;AAEP3E,YAAAA,KAAK,EAAEU,QAAQ,CAACC,MAAT,CAAgBE;AAFhB,WADA;AAKXmC,UAAAA,YAAY,EAAE;AACVT,YAAAA,QAAQ,EAAE,CAACiB,EAAE,GAAG9C,QAAQ,CAACkE,SAAf,MAA8B,IAA9B,IAAsCpB,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2DzC,SAAS,CAAC8B,MAAV,CAAiB+B,SAD5E;AAEV5E,YAAAA,KAAK,EAAEU,QAAQ,CAAC6C,IAAT,CAAcvD;AAFX,WALH;AASXmD,UAAAA,IAAI,EAAElD,mBAAmB,CAACqD,iBAApB,CAAsCC;AATjC,SAAf;AAWA,aAAKtB,OAAL,CAAalB,SAAb,EAAwBL,QAAxB,EAAkCwB,SAAlC,EAA6CC,SAA7C,EAAwDuC,QAAxD;AACA,YAAIG,WAAW,GAAG;AACdvC,UAAAA,SAAS,EAAE;AACPC,YAAAA,QAAQ,EAAEvB,OAAO,CAACE,aAAR,CAAsBwB,KAAtB,CAA4B/B,MAA5B,CAAmCC,OADtC;AAEPZ,YAAAA,KAAK,EAAEU,QAAQ,CAACC,MAAT,CAAgBC;AAFhB,WADG;AAKdoC,UAAAA,YAAY,EAAE;AACVT,YAAAA,QAAQ,EAAE7B,QAAQ,CAACoE,gBAAT,CAA0BlE,OAA1B,CAAkCZ,KADlC;AAEVA,YAAAA,KAAK,EAAEU,QAAQ,CAACE,OAAT,CAAiBZ;AAFd,WALA;AASdmD,UAAAA,IAAI,EAAElD,mBAAmB,CAACqD,iBAApB,CAAsC1C;AAT9B,SAAlB;AAWA,aAAKqB,OAAL,CAAalB,SAAb,EAAwBL,QAAxB,EAAkCwB,SAAlC,EAA6CC,SAA7C,EAAwD0C,WAAxD;;AACA,YAAI,CAAC9D,SAAS,CAACJ,MAAV,CAAiByC,WAAtB,EAAmC;AAC/B,cAAIlB,SAAS,IAAInB,SAAS,CAAC8B,MAAV,CAAiBC,kBAAlC,EAAsD;AAClD,iBAAKiC,gBAAL,CAAsBhE,SAAtB,EAAiCL,QAAjC;AACH,WAFD,MAGK;AACD,mBAAOA,QAAQ,CAACC,MAAT,CAAgBG,KAAvB;AACH;AACJ,SAPD,MAQK;AACD,iBAAOJ,QAAQ,CAACC,MAAT,CAAgBG,KAAvB;AACH;AACJ;AACJ;AACJ,GA1DD;;AA2DAN,EAAAA,OAAO,CAACsB,WAAR,GAAsB,UAAUf,SAAV,EAAqB;AACvC,QAAIiE,QAAQ,GAAGjE,SAAS,CAACG,aAAV,CAAwBwC,KAAxB,CAA8BW,QAA7C;;AACA,QAAIW,QAAQ,KAAKxC,SAAjB,EAA4B;AACxB;AACH;;AACD,QAAIoB,QAAQ,GAAG7C,SAAS,CAAC8B,MAAV,CAAiBC,kBAAhC;AACA,QAAIe,KAAK,GAAG9C,SAAS,CAAC+C,SAAV,CAAoBC,WAApB,CAAgCkB,uBAAhC,CAAwDD,QAAxD,EAAkEpB,QAAlE,CAAZ;;AACA,SAAK,IAAIK,EAAE,GAAG,CAAT,EAAYiB,OAAO,GAAGrB,KAA3B,EAAkCI,EAAE,GAAGiB,OAAO,CAACf,MAA/C,EAAuDF,EAAE,EAAzD,EAA6D;AACzD,UAAIT,EAAE,GAAG0B,OAAO,CAACjB,EAAD,CAAhB;AAAA,UAAsBkB,UAAU,GAAG3B,EAAE,CAACI,QAAtC;AAAA,UAAgDlD,QAAQ,GAAG8C,EAAE,CAAC9C,QAA9D;;AACA,UAAI,CAACA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC2D,QAA9D,MAA4E7B,SAAhF,EAA2F;AACvF;AACH;;AACD,UAAI4C,KAAK,GAAG,IAAID,UAAU,GAAGpE,SAAS,CAAC8B,MAAV,CAAiBC,kBAA9C;;AACA,UAAIqC,UAAU,IAAIpE,SAAS,CAAC8B,MAAV,CAAiBC,kBAAnC,EAAuD;AACnD,YAAIsC,KAAK,IAAI,CAAT,IAAcrE,SAAS,CAACG,aAAV,CAAwBmE,MAAxB,KAAmC/E,WAAW,CAACgF,SAAZ,CAAsBC,cAA3E,EAA2F;AACvF,eAAKC,eAAL,CAAqBzE,SAArB,EAAgCL,QAAhC,EAA0C0E,KAA1C;AACA,eAAKK,kBAAL,CAAwB1E,SAAxB,EAAmCL,QAAnC,EAA6C0E,KAA7C;AACA,eAAKL,gBAAL,CAAsBhE,SAAtB,EAAiCL,QAAjC;AACH;AACJ,OAND,MAOK;AACD,aAAKD,KAAL,CAAWC,QAAX;AACH;;AACD,UAAIK,SAAS,CAACG,aAAV,CAAwBmE,MAAxB,KAAmC/E,WAAW,CAACgF,SAAZ,CAAsBI,eAA7D,EAA8E;AAC1E,aAAKjF,KAAL,CAAWC,QAAX;AACH;AACJ;AACJ,GA3BD;;AA4BAF,EAAAA,OAAO,CAACgF,eAAR,GAA0B,UAAUzE,SAAV,EAAqBL,QAArB,EAA+B0E,KAA/B,EAAsC;AAC5D,QAAI5B,EAAJ;;AACA,QAAImC,QAAQ,GAAG5E,SAAS,CAAC8B,MAAV,CAAiB8B,cAAhC;;AACA,QAAIgB,QAAQ,KAAKnD,SAAjB,EAA4B;AACxB;AACH;;AACD,QAAIoD,OAAO,GAAG,CAACpC,EAAE,GAAG9C,QAAQ,CAACkE,SAAf,MAA8B,IAA9B,IAAsCpB,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2DzC,SAAS,CAAC8B,MAAV,CAAiB+B,SAA1F;AACA,QAAIiB,KAAK,GAAGnF,QAAQ,CAAC6C,IAAT,CAAcvD,KAA1B;AACA,QAAIuD,IAAI,GAAG,KAAKuC,oBAAL,CAA0BD,KAA1B,EAAiCF,QAAjC,EAA2CC,OAA3C,EAAoDR,KAApD,CAAX;;AACA,QAAI7B,IAAI,KAAKf,SAAb,EAAwB;AACpB9B,MAAAA,QAAQ,CAACC,MAAT,CAAgBE,MAAhB,GAAyB0C,IAAzB;AACH;AACJ,GAZD;;AAaA/C,EAAAA,OAAO,CAACiF,kBAAR,GAA6B,UAAU1E,SAAV,EAAqBL,QAArB,EAA+B0E,KAA/B,EAAsC;AAC/D,QAAIpE,OAAO,GAAGD,SAAS,CAACC,OAAxB;AACA,QAAI+E,WAAW,GAAG/E,OAAO,CAACE,aAAR,CAAsBwB,KAAtB,CAA4B/B,MAA5B,CAAmCC,OAArD;;AACA,QAAImF,WAAW,KAAKvD,SAApB,EAA+B;AAC3B;AACH;;AACD,QAAIwD,UAAU,GAAGtF,QAAQ,CAACoE,gBAAT,CAA0BlE,OAA1B,CAAkCZ,KAAnD;AACA,QAAIiG,QAAQ,GAAGvF,QAAQ,CAACE,OAAT,CAAiBZ,KAAhC;AACA,QAAIY,OAAO,GAAG,KAAKkF,oBAAL,CAA0BG,QAA1B,EAAoCF,WAApC,EAAiDC,UAAjD,EAA6DZ,KAA7D,CAAd;;AACA,QAAIxE,OAAO,KAAK4B,SAAhB,EAA2B;AACvB9B,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,OAAhB,GAA0BA,OAA1B;AACH;AACJ,GAZD;;AAaAJ,EAAAA,OAAO,CAACsF,oBAAR,GAA+B,UAAUI,aAAV,EAAyBC,SAAzB,EAAoCC,YAApC,EAAkDhB,KAAlD,EAAyD;AACpF,QAAIe,SAAS,GAAGC,YAAhB,EAA8B;AAC1B,UAAI7C,IAAI,GAAG2C,aAAa,GAAG,CAACC,SAAS,GAAGC,YAAb,IAA6BhB,KAAxD;AACA,aAAOjF,OAAO,CAACwB,KAAR,CAAc0E,KAAd,CAAoB9C,IAApB,EAA0B2C,aAA1B,EAAyCC,SAAzC,CAAP;AACH,KAHD,MAIK,IAAIA,SAAS,GAAGC,YAAhB,EAA8B;AAC/B,UAAI7C,IAAI,GAAG2C,aAAa,GAAG,CAACE,YAAY,GAAGD,SAAhB,IAA6Bf,KAAxD;AACA,aAAOjF,OAAO,CAACwB,KAAR,CAAc0E,KAAd,CAAoB9C,IAApB,EAA0B4C,SAA1B,EAAqCD,aAArC,CAAP;AACH;AACJ,GATD;;AAUA1F,EAAAA,OAAO,CAACuE,gBAAR,GAA2B,UAAUhE,SAAV,EAAqBL,QAArB,EAA+B;AACtD,QAAIM,OAAO,GAAGD,SAAS,CAACC,OAAxB;;AACA,QAAIN,QAAQ,CAACC,MAAT,CAAgBG,KAAhB,KAA0B0B,SAA9B,EAAyC;AACrC,UAAI8D,SAAS,GAAGtF,OAAO,CAACE,aAAR,CAAsBwB,KAAtB,CAA4B/B,MAA5B,CAAmCG,KAAnD;;AACA,UAAIwF,SAAS,KAAK9D,SAAlB,EAA6B;AACzB;AACH;;AACD9B,MAAAA,QAAQ,CAACC,MAAT,CAAgBG,KAAhB,GAAwBP,YAAY,CAACgG,UAAb,CAAwBC,UAAxB,CAAmCF,SAAS,YAAYG,KAArB,GACvDtG,OAAO,CAACwB,KAAR,CAAc+E,aAAd,CAA4BJ,SAA5B,CADuD,GAEvDA,SAFoB,CAAxB;AAGH;AACJ,GAXD;;AAYA,SAAO9F,OAAP;AACH,CA1Mc,EAAf;;AA2MAT,OAAO,CAACS,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ProcessBubbleType_1 = require(\"../../../Enums/ProcessBubbleType\");\nvar Utils_1 = require(\"../../Utils/Utils\");\nvar HoverMode_1 = require(\"../../../Enums/Modes/HoverMode\");\nvar ClickMode_1 = require(\"../../../Enums/Modes/ClickMode\");\nvar Constants_1 = require(\"../../Utils/Constants\");\nvar ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nvar Bubbler = (function () {\n    function Bubbler() {\n    }\n    Bubbler.reset = function (particle) {\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    };\n    Bubbler.bubble = function (container) {\n        var options = container.options;\n        var hoverEnabled = options.interactivity.events.onHover.enable;\n        var hoverMode = options.interactivity.events.onHover.mode;\n        var clickEnabled = options.interactivity.events.onClick.enable;\n        var clickMode = options.interactivity.events.onClick.mode;\n        if (hoverEnabled && Utils_1.Utils.isInArray(HoverMode_1.HoverMode.bubble, hoverMode)) {\n            this.hoverBubble(container);\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(ClickMode_1.ClickMode.bubble, clickMode)) {\n            this.clickBubble(container);\n        }\n    };\n    Bubbler.process = function (container, particle, distMouse, timeSpent, data) {\n        var bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        var options = container.options;\n        var bubbleDuration = options.interactivity.modes.bubble.duration;\n        var bubbleDistance = container.retina.bubbleModeDistance;\n        var particlesParam = data.particlesObj.optValue;\n        var pObjBubble = data.bubbleObj.value;\n        var pObj = data.particlesObj.value || 0;\n        var type = data.type;\n        if (bubbleParam !== particlesParam) {\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= bubbleDistance) {\n                    var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                    if (obj !== bubbleParam) {\n                        var value = pObj - (timeSpent * (pObj - bubbleParam) / bubbleDuration);\n                        if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else if (pObjBubble) {\n                if (type === ProcessBubbleType_1.ProcessBubbleType.size) {\n                    delete particle.bubble.radius;\n                }\n                if (type === ProcessBubbleType_1.ProcessBubbleType.opacity) {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n    };\n    Bubbler.clickBubble = function (container) {\n        var _a;\n        var options = container.options;\n        var mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (mouseClickPos === undefined) {\n            return;\n        }\n        var distance = container.retina.bubbleModeDistance;\n        var query = container.particles.spatialGrid.queryRadius(mouseClickPos, distance);\n        for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n            var particle = query_1[_i];\n            var distMouse = Utils_1.Utils.getDistanceBetweenCoordinates(particle.position, mouseClickPos);\n            var timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (container.bubble.clicking) {\n                if (timeSpent > options.interactivity.modes.bubble.duration) {\n                    container.bubble.durationEnd = true;\n                }\n                if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                    container.bubble.clicking = false;\n                    container.bubble.durationEnd = false;\n                }\n                var sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType_1.ProcessBubbleType.size,\n                };\n                this.process(container, particle, distMouse, timeSpent, sizeData);\n                var opacityData = {\n                    bubbleObj: {\n                        optValue: options.interactivity.modes.bubble.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: particle.particlesOptions.opacity.value,\n                        value: particle.opacity.value,\n                    },\n                    type: ProcessBubbleType_1.ProcessBubbleType.opacity,\n                };\n                this.process(container, particle, distMouse, timeSpent, opacityData);\n                if (!container.bubble.durationEnd) {\n                    if (distMouse <= container.retina.bubbleModeDistance) {\n                        this.hoverBubbleColor(container, particle);\n                    }\n                    else {\n                        delete particle.bubble.color;\n                    }\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        }\n    };\n    Bubbler.hoverBubble = function (container) {\n        var mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        var distance = container.retina.bubbleModeDistance;\n        var query = container.particles.spatialGrid.queryRadiusWithDistance(mousePos, distance);\n        for (var _i = 0, query_2 = query; _i < query_2.length; _i++) {\n            var _a = query_2[_i], distance_1 = _a.distance, particle = _a.particle;\n            if ((particle === null || particle === void 0 ? void 0 : particle.position) === undefined) {\n                continue;\n            }\n            var ratio = 1 - distance_1 / container.retina.bubbleModeDistance;\n            if (distance_1 <= container.retina.bubbleModeDistance) {\n                if (ratio >= 0 && container.interactivity.status === Constants_1.Constants.mouseMoveEvent) {\n                    this.hoverBubbleSize(container, particle, ratio);\n                    this.hoverBubbleOpacity(container, particle, ratio);\n                    this.hoverBubbleColor(container, particle);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === Constants_1.Constants.mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    };\n    Bubbler.hoverBubbleSize = function (container, particle, ratio) {\n        var _a;\n        var modeSize = container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        var optSize = (_a = particle.sizeValue) !== null && _a !== void 0 ? _a : container.retina.sizeValue;\n        var pSize = particle.size.value;\n        var size = this.calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    };\n    Bubbler.hoverBubbleOpacity = function (container, particle, ratio) {\n        var options = container.options;\n        var modeOpacity = options.interactivity.modes.bubble.opacity;\n        if (modeOpacity === undefined) {\n            return;\n        }\n        var optOpacity = particle.particlesOptions.opacity.value;\n        var pOpacity = particle.opacity.value;\n        var opacity = this.calculateBubbleValue(pOpacity, modeOpacity, optOpacity, ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    };\n    Bubbler.calculateBubbleValue = function (particleValue, modeValue, optionsValue, ratio) {\n        if (modeValue > optionsValue) {\n            var size = particleValue + (modeValue - optionsValue) * ratio;\n            return Utils_1.Utils.clamp(size, particleValue, modeValue);\n        }\n        else if (modeValue < optionsValue) {\n            var size = particleValue - (optionsValue - modeValue) * ratio;\n            return Utils_1.Utils.clamp(size, modeValue, particleValue);\n        }\n    };\n    Bubbler.hoverBubbleColor = function (container, particle) {\n        var options = container.options;\n        if (particle.bubble.color === undefined) {\n            var modeColor = options.interactivity.modes.bubble.color;\n            if (modeColor === undefined) {\n                return;\n            }\n            particle.bubble.color = ColorUtils_1.ColorUtils.colorToRgb(modeColor instanceof Array ?\n                Utils_1.Utils.itemFromArray(modeColor) :\n                modeColor);\n        }\n    };\n    return Bubbler;\n}());\nexports.Bubbler = Bubbler;\n"]},"metadata":{},"sourceType":"script"}