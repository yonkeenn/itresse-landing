{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Constants_1 = require(\"./Utils/Constants\");\n\nvar CanvasUtils_1 = require(\"./Utils/CanvasUtils\");\n\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\n\nvar Canvas = function () {\n  function Canvas(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  Canvas.prototype.init = function () {\n    this.resize();\n    var container = this.container;\n    var options = container.options;\n    var cover = options.backgroundMask.cover;\n    var color = cover.color;\n    var trail = options.particles.move.trail;\n    this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(color);\n    this.trailFillColor = ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.paint();\n  };\n\n  Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Constants_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n    this.element = canvas;\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  };\n\n  Canvas.prototype.destroy = function () {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.resize = function () {\n    if (this.element) {\n      this.element.width = this.size.width;\n      this.element.height = this.size.height;\n    }\n  };\n\n  Canvas.prototype.paint = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (this.context) {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n      } else {\n        this.paintBase();\n      }\n    }\n  };\n\n  Canvas.prototype.clear = function () {\n    var container = this.container;\n    var options = container.options;\n    var trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.isPointInPath = function (path, point) {\n    var _a, _b;\n\n    return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n  };\n\n  Canvas.prototype.drawPolygonMask = function () {\n    var container = this.container;\n    var options = container.options;\n    var context = this.context;\n    var polygonDraw = options.polygon.draw;\n    var polygon = container.polygon;\n    var rawData = polygon.raw;\n\n    for (var _i = 0, _a = polygon.paths; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var path2d = path.path2d;\n      var path2dSupported = polygon.path2DSupported;\n\n      if (context) {\n        if (path2dSupported && path2d && polygon.offset) {\n          CanvasUtils_1.CanvasUtils.drawPolygonMaskPath(context, path2d, polygonDraw.stroke, polygon.offset);\n        } else if (rawData) {\n          CanvasUtils_1.CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n        }\n      }\n    }\n  };\n\n  Canvas.prototype.drawAbsorber = function (absorber) {\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawAbsorber(ctx, absorber);\n  };\n\n  Canvas.prototype.drawLinkedLine = function (p1, p2, opacity) {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n    var pos1 = p1.position;\n    var pos2 = p2.position;\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n    var twinkle = options.particles.twinkle.lines;\n    var twinkleFreq = twinkle.frequency;\n    var twinkleColor = twinkle.color;\n    var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n    var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n\n    if (twinkling && twinkleRgb !== undefined) {\n      colorLine = twinkleRgb;\n      opacity = twinkle.opacity;\n    } else if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    } else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n      var sourceColor = p1.color;\n      var destColor = p2.color;\n      colorLine = ColorUtils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n    } else {\n      colorLine = container.particles.lineLinkedColor;\n    }\n\n    var width = (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth;\n    CanvasUtils_1.CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.lineLinked.shadow);\n  };\n\n  Canvas.prototype.drawConnectLine = function (p1, p2) {\n    var _a;\n\n    var lineStyle = this.lineStyle(p1, p2);\n\n    if (!lineStyle) {\n      return;\n    }\n\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n  };\n\n  Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n    var _a;\n\n    var container = this.container;\n    var optColor = particle.particlesOptions.lineLinked.color;\n    var lineColor = container.particles.grabLineColor || (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n\n    if (lineColor == Constants_1.Constants.randomColorValue) {\n      lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    }\n\n    container.particles.grabLineColor = lineColor;\n    var ctx = container.canvas.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n\n    if (container.particles.grabLineColor === Constants_1.Constants.randomColorValue) {\n      colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n    } else {\n      colorLine = container.particles.grabLineColor;\n    }\n\n    if (colorLine === undefined) {\n      return;\n    }\n\n    var beginPos = {\n      x: particle.position.x + particle.offset.x,\n      y: particle.position.y + particle.offset.y\n    };\n    CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n  };\n\n  Canvas.prototype.drawParticle = function (particle) {\n    var _a, _b, _c;\n\n    var container = this.container;\n    var options = container.options;\n    var twinkle = particle.particlesOptions.twinkle.particles;\n    var twinkleFreq = twinkle.frequency;\n    var twinkleColor = typeof twinkle.color === \"string\" ? {\n      value: twinkle.color\n    } : twinkle.color;\n    var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n    var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n    var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n    var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n    var color = twinkling && twinkleRgb !== undefined ? twinkleRgb : (_c = particle.bubble.color) !== null && _c !== void 0 ? _c : particle.color;\n    var colorValue = color !== undefined ? ColorUtils_1.ColorUtils.getStyleFromColor(color, opacity) : undefined;\n\n    if (!this.context || !colorValue) {\n      return;\n    }\n\n    CanvasUtils_1.CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n  };\n\n  Canvas.prototype.paintBase = function (baseColor) {\n    if (this.context) {\n      CanvasUtils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n  };\n\n  Canvas.prototype.lineStyle = function (p1, p2) {\n    var container = this.container;\n    var options = container.options;\n    var connectOptions = options.interactivity.modes.connect;\n\n    if (p1.color && p2.color) {\n      if (this.context) {\n        return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.lineLinked.opacity);\n      }\n    }\n  };\n\n  Canvas.prototype.initBackground = function () {\n    var container = this.container;\n    var options = container.options;\n    var background = options.background;\n    var element = this.element;\n\n    if (!element) {\n      return;\n    }\n\n    var elementStyle = element.style;\n\n    if (background.color) {\n      var color = ColorUtils_1.ColorUtils.colorToRgb(background.color);\n\n      if (color) {\n        elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n      }\n    }\n\n    if (background.image) {\n      elementStyle.backgroundImage = background.image;\n    }\n\n    if (background.position) {\n      elementStyle.backgroundPosition = background.position;\n    }\n\n    if (background.repeat) {\n      elementStyle.backgroundRepeat = background.repeat;\n    }\n\n    if (background.size) {\n      elementStyle.backgroundSize = background.size;\n    }\n  };\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/home/jhon/Web/iTresse/landing/node_modules/tsparticles/dist/Classes/Canvas.js"],"names":["Object","defineProperty","exports","value","Constants_1","require","CanvasUtils_1","ColorUtils_1","Canvas","container","size","height","width","context","generatedCanvas","prototype","init","resize","options","cover","backgroundMask","color","trail","particles","move","coverColor","ColorUtils","colorToRgb","trailFillColor","fillColor","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","offsetHeight","offsetWidth","getContext","retina","initBackground","destroy","CanvasUtils","clear","enable","paintBase","getStyleFromColor","length","isPointInPath","path","point","_b","x","y","drawPolygonMask","polygonDraw","polygon","draw","rawData","raw","_i","paths","path2d","path2dSupported","path2DSupported","offset","drawPolygonMaskPath","stroke","drawAbsorber","absorber","ctx","drawLinkedLine","p1","p2","opacity","pos1","position","pos2","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleColor","twinkleRgb","undefined","twinkling","Math","random","lineLinkedColor","randomColorValue","getRandomRgbColor","sourceColor","destColor","mix","lineLinkedWidth","drawLineLinked","particlesOptions","lineLinked","shadow","drawConnectLine","lineStyle","drawGrabLine","particle","mousePos","optColor","lineColor","grabLineColor","stringToRgb","beginPos","drawParticle","_c","radius","bubble","colorValue","baseColor","connectOptions","interactivity","modes","connect","gradient","background","elementStyle","style","backgroundColor","image","backgroundImage","backgroundPosition","repeat","backgroundRepeat","backgroundSize"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants_1 = require(\"./Utils/Constants\");\nvar CanvasUtils_1 = require(\"./Utils/CanvasUtils\");\nvar ColorUtils_1 = require(\"./Utils/ColorUtils\");\nvar Canvas = (function () {\n    function Canvas(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    Canvas.prototype.init = function () {\n        this.resize();\n        var container = this.container;\n        var options = container.options;\n        var cover = options.backgroundMask.cover;\n        var color = cover.color;\n        var trail = options.particles.move.trail;\n        this.coverColor = ColorUtils_1.ColorUtils.colorToRgb(color);\n        this.trailFillColor = ColorUtils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.paint();\n    };\n    Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Constants_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n        this.element = canvas;\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    };\n    Canvas.prototype.destroy = function () {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.resize = function () {\n        if (this.element) {\n            this.element.width = this.size.width;\n            this.element.height = this.size.height;\n        }\n    };\n    Canvas.prototype.paint = function () {\n        var container = this.container;\n        var options = container.options;\n        if (this.context) {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.coverColor));\n            }\n            else {\n                this.paintBase();\n            }\n        }\n    };\n    Canvas.prototype.clear = function () {\n        var container = this.container;\n        var options = container.options;\n        var trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(ColorUtils_1.ColorUtils.getStyleFromColor(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            CanvasUtils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.isPointInPath = function (path, point) {\n        var _a, _b;\n        return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n    };\n    Canvas.prototype.drawPolygonMask = function () {\n        var container = this.container;\n        var options = container.options;\n        var context = this.context;\n        var polygonDraw = options.polygon.draw;\n        var polygon = container.polygon;\n        var rawData = polygon.raw;\n        for (var _i = 0, _a = polygon.paths; _i < _a.length; _i++) {\n            var path = _a[_i];\n            var path2d = path.path2d;\n            var path2dSupported = polygon.path2DSupported;\n            if (context) {\n                if (path2dSupported && path2d && polygon.offset) {\n                    CanvasUtils_1.CanvasUtils.drawPolygonMaskPath(context, path2d, polygonDraw.stroke, polygon.offset);\n                }\n                else if (rawData) {\n                    CanvasUtils_1.CanvasUtils.drawPolygonMask(context, rawData, polygonDraw.stroke);\n                }\n            }\n        }\n    };\n    Canvas.prototype.drawAbsorber = function (absorber) {\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawAbsorber(ctx, absorber);\n    };\n    Canvas.prototype.drawLinkedLine = function (p1, p2, opacity) {\n        var _a;\n        var container = this.container;\n        var options = container.options;\n        var pos1 = p1.position;\n        var pos2 = p2.position;\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        var twinkle = options.particles.twinkle.lines;\n        var twinkleFreq = twinkle.frequency;\n        var twinkleColor = twinkle.color;\n        var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n        var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        if (twinkling && twinkleRgb !== undefined) {\n            colorLine = twinkleRgb;\n            opacity = twinkle.opacity;\n        }\n        else if (container.particles.lineLinkedColor === Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        else if (container.particles.lineLinkedColor == \"mid\" && p1.color && p2.color) {\n            var sourceColor = p1.color;\n            var destColor = p2.color;\n            colorLine = ColorUtils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n        }\n        else {\n            colorLine = container.particles.lineLinkedColor;\n        }\n        var width = (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth;\n        CanvasUtils_1.CanvasUtils.drawLineLinked(ctx, width, pos1, pos2, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.lineLinked.shadow);\n    };\n    Canvas.prototype.drawConnectLine = function (p1, p2) {\n        var _a;\n        var lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.lineLinkedWidth) !== null && _a !== void 0 ? _a : this.container.retina.lineLinkedWidth, lineStyle, p1.position, p2.position);\n    };\n    Canvas.prototype.drawGrabLine = function (particle, opacity, mousePos) {\n        var _a;\n        var container = this.container;\n        var optColor = particle.particlesOptions.lineLinked.color;\n        var lineColor = container.particles.grabLineColor ||\n            (typeof optColor === \"string\" ? ColorUtils_1.ColorUtils.stringToRgb(optColor) : ColorUtils_1.ColorUtils.colorToRgb(optColor));\n        if (lineColor == Constants_1.Constants.randomColorValue) {\n            lineColor = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        container.particles.grabLineColor = lineColor;\n        var ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        if (container.particles.grabLineColor === Constants_1.Constants.randomColorValue) {\n            colorLine = ColorUtils_1.ColorUtils.getRandomRgbColor();\n        }\n        else {\n            colorLine = container.particles.grabLineColor;\n        }\n        if (colorLine === undefined) {\n            return;\n        }\n        var beginPos = {\n            x: particle.position.x + particle.offset.x,\n            y: particle.position.y + particle.offset.y,\n        };\n        CanvasUtils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.lineLinkedWidth) !== null && _a !== void 0 ? _a : container.retina.lineLinkedWidth, beginPos, mousePos, colorLine, opacity);\n    };\n    Canvas.prototype.drawParticle = function (particle) {\n        var _a, _b, _c;\n        var container = this.container;\n        var options = container.options;\n        var twinkle = particle.particlesOptions.twinkle.particles;\n        var twinkleFreq = twinkle.frequency;\n        var twinkleColor = typeof twinkle.color === \"string\" ? { value: twinkle.color } : twinkle.color;\n        var twinkleRgb = twinkleColor !== undefined ? ColorUtils_1.ColorUtils.colorToRgb(twinkleColor) : undefined;\n        var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n        var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n        var color = twinkling && twinkleRgb !== undefined ?\n            twinkleRgb : (_c = particle.bubble.color) !== null && _c !== void 0 ? _c : particle.color;\n        var colorValue = color !== undefined ? ColorUtils_1.ColorUtils.getStyleFromColor(color, opacity) : undefined;\n        if (!this.context || !colorValue) {\n            return;\n        }\n        CanvasUtils_1.CanvasUtils.drawParticle(this.context, particle, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n    };\n    Canvas.prototype.paintBase = function (baseColor) {\n        if (this.context) {\n            CanvasUtils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n        }\n    };\n    Canvas.prototype.lineStyle = function (p1, p2) {\n        var container = this.container;\n        var options = container.options;\n        var connectOptions = options.interactivity.modes.connect;\n        if (p1.color && p2.color) {\n            if (this.context) {\n                return CanvasUtils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.lineLinked.opacity);\n            }\n        }\n    };\n    Canvas.prototype.initBackground = function () {\n        var container = this.container;\n        var options = container.options;\n        var background = options.background;\n        var element = this.element;\n        if (!element) {\n            return;\n        }\n        var elementStyle = element.style;\n        if (background.color) {\n            var color = ColorUtils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = ColorUtils_1.ColorUtils.getStyleFromColor(color, background.opacity);\n            }\n        }\n        if (background.image) {\n            elementStyle.backgroundImage = background.image;\n        }\n        if (background.position) {\n            elementStyle.backgroundPosition = background.position;\n        }\n        if (background.repeat) {\n            elementStyle.backgroundRepeat = background.repeat;\n        }\n        if (background.size) {\n            elementStyle.backgroundSize = background.size;\n        }\n    };\n    return Canvas;\n}());\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}